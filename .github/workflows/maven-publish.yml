 
name: Maven-docker-acr-eks-cicd
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'
          
      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.8.2
          
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
     # - name: Install PostgeSQL
     #   run: sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list' && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -  && sudo apt-get update && sudo apt-get -y install postgresql
     # - uses: harmon758/postgresql-action@v1
     #   with:
     #    postgresql version: '11'
          
     # - name: Setup tmate session
     #   uses: mxschmitt/action-tmate@v3
        
      - name: Build with Maven
        run: |
          mvn -B package --file POS_DayClose/pom.xml -DskipTests
          sudo mkdir /home/artifacts && sudo cp POS_DayClose/target/*.war  /home/artifacts
          
      #- name: Download Artifaction
      #  run: |
      #      POS_DayClose/target/*.war
      
#      - name: Copy artifact to Repository where it builds dockerfile
#        uses: andstor/copycat-action@v3
#        with:
#          personal_token: ${{ secrets.PERSONAL_TOKEN }}
#          src_path: artifacts
#          dst_path: .
#          dst_owner: ramakri4u
#          dst_repo_name: mvnproj
#          dst_branch: master
#          src_branch: main
 
#      - name: Push artifact to github 
#        run: | 
#          cd articats 
#          git add .
#          git commit -m "Build artifacts"
#          git push
          
      
#      - name: Commit & Push changes
#        uses: Andro999b/push@v1.3
#        with:
#          github_token: ${{ secrets.PERSONAL_TOKEN }}
#          author_email: ramakri4u@yahoo.com
#          repository: ramakri4u/mvnproj
#          directory: artifacts/

      - name: Persistent workflow data as artificats 
        uses: actions/upload-artifact@v2
        with: 
          name: github-actions-artifact
          path: /home/artifacts
          
#     - name: Commit files
#        run: |
#          sudo su - root << EOF  
#          cd /home/ && git clone https://github.com/ramakri4u/mvnproj.git && cp artifacts/*.war mvnproj && cd mvnproj && git init && git add . && git config --local user.email "ramakri4u@yahoo.com" && git config --local user.name "ramakri4u" && git commit -m "Copying the Artifact file"          
#          EOF

      - name: Commit & Push changes
        uses: Andro999b/push@v1.3
        with:
          github_token: ${{ secrets.PERSONAL_TOKEN }}
          author_email: ramakri4u@yahoo.com
          repository: ramakri4u/mvnproj
          directory: /home/mvnproj/      

#      - name: Push changes
#        uses: ad-m/github-push-action@master
#        with:
#          github_token: ${{ secrets.PERSONAL_TOKEN }}
#          branch: main
         
      
      
## AWS S3 Bucket 

#      - uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ap-south-1
          
#     - name: Upload artifact to s3
#       run: aws s3 cp -r articats  s3://ramakrishna-microservices-artifacts/
      
          
#tmate session to Debug           
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3  
